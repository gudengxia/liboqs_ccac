#ifndef MULAN_POLYNOMIAL_H
#define MULAN_POLYNOMIAL_H

#include "Parameters.h"
#include "Rounding.h"


static const uint32_t mulan_zetas[N] = {0, 911456, 1363067, 1387093, 1622357, 719340, 1799478, 1663554, 455113, 642466, 1026755, 564408, 1615792, 413506, 1428089, 766215, 492815, 446874, 427032, 619546, 723035, 384571, 1637659, 1658493, 1357881, 1282887, 1283303, 308353, 881372, 1178719, 554432, 388503, 281696, 943431, 947622, 1609465, 450905, 1057834, 1230601, 1769314, 1554168, 847431, 256412, 625864, 1411300, 957394, 1019890, 1572371, 524615, 1746896, 1863196, 1000663, 1244370, 1007742, 1373453, 844397, 885532, 270746, 538487, 1594980, 897204, 1293561, 1376019, 1229490, 560655, 356944, 1668742, 1823047, 1184464, 1583852, 1204170, 1353410, 870805, 555308, 475265, 189847, 654846, 512662, 94593, 620803, 1498259, 1730477, 1726065, 1216116, 789091, 1183349, 427114, 403607, 685065, 1571611, 1496927, 1238423, 1778289, 299681, 328917, 702702, 636645, 41531, 208939, 720738, 1776436, 1822446, 709107, 1588662, 1806673, 1357897, 1796946, 569917, 199089, 1232795, 1426155, 1335693, 744971, 995501, 1666210, 729410, 20486, 1429554, 1718869, 738742, 1031449, 11991, 1708540, 1012294, 1789287, 668992, 1445915, 439271, 635729, 1215711, 1029019, 697236, 691975, 659417, 1371890, 1032083, 849553, 619164, 209446, 1409284, 1930862, 1321329, 1473458, 879025, 206217, 1175000, 1830583, 1484477, 1199204, 1717408, 931798, 1902100, 956161, 1430949, 664323, 768592, 753911, 499039, 346082, 140372, 777312, 323268, 699869, 1060469, 344721, 367503, 1393565, 306650, 1738196, 482615, 1381286, 334726, 1730736, 224299, 1137690, 433178, 1898263, 1054035, 1741542, 575447, 1783511, 1261405, 1280337, 1024237, 896679, 176256, 1112881, 1126506, 1087010, 1902394, 1113105, 822320, 432003, 266189, 1120027, 1497470, 883920, 1135053, 1154746, 419777, 1089567, 1096979, 580043, 1011540, 293168, 1540606, 941194, 1204743, 1704121, 197709, 106362, 1459602, 1634077, 282503, 496852, 838938, 1773273, 557269, 1418130, 1827201, 1628337, 1732434, 1654541, 103431, 1613272, 907213, 555478, 1443246, 1316957, 868641, 1562178, 324000, 980579, 1076849, 1795584, 14017, 442694, 372594, 551095, 1486179, 720607, 683621, 1543721, 479404, 297595, 810411, 490130, 589428, 475662, 644291, 668763, 456515, 639200, 1574568, 1229243, 441024};

static const uint32_t mulan_zetas_inv[N] = {1511233, 723014, 377689, 1313057, 1495742, 1283494, 1307966, 1476595, 1362829, 1462127, 1141846, 1654662, 1472853, 408536, 1268636, 1231650, 466078, 1401162, 1579663, 1509563, 1938240, 156673, 875408, 971678, 1628257, 390079, 1083616, 635300, 509011, 1396779, 1045044, 338985, 1848826, 297716, 219823, 323920, 125056, 534127, 1394988, 178984, 1113319, 1455405, 1669754, 318180, 492655, 1845895, 1754548, 248136, 747514, 1011063, 411651, 1659089, 940717, 1372214, 855278, 862690, 1532480, 797511, 817204, 1068337, 454787, 832230, 1686068, 1520254, 1129937, 839152, 49863, 865247, 825751, 839376, 1776001, 1055578, 928020, 671920, 690852, 168746, 1376810, 210715, 898222, 53994, 1519079, 814567, 1727958, 221521, 1617531, 570971, 1469642, 214061, 1645607, 558692, 1584754, 1607536, 891788, 1252388, 1628989, 1174945, 1811885, 1606175, 1453218, 1198346, 1183665, 1287934, 521308, 996096, 50157, 1020459, 234849, 753053, 467780, 121674, 777257, 1746040, 1073232, 478799, 630928, 21395, 542973, 1742811, 1333093, 1102704, 920174, 580367, 1292840, 1260282, 1255021, 923238, 736546, 1316528, 1512986, 506342, 1283265, 162970, 939963, 243717, 1940266, 920808, 1213515, 233388, 522703, 1931771, 1222847, 286047, 956756, 1207286, 616564, 526102, 719462, 1753168, 1382340, 155311, 594360, 145584, 363595, 1243150, 129811, 175821, 1231519, 1743318, 1910726, 1315612, 1249555, 1623340, 1652576, 173968, 713834, 455330, 380646, 1267192, 1548650, 1525143, 768908, 1163166, 736141, 226192, 221780, 453998, 1331454, 1857664, 1439595, 1297411, 1762410, 1476992, 1396949, 1081452, 598847, 748087, 368405, 767793, 129210, 283515, 1595313, 1391602, 722767, 576238, 658696, 1055053, 357277, 1413770, 1681511, 1066725, 1107860, 578804, 944515, 707887, 951594, 89061, 205361, 1427642, 379886, 932367, 994863, 540957, 1326393, 1695845, 1104826, 398089, 182943, 721656, 894423, 1501352, 342792, 1004635, 1008826, 1670561, 1563754, 1397825, 773538, 1070885, 1643904, 668954, 669370, 594376, 293764, 314598, 1567686, 1229222, 1332711, 1525225, 1505383, 1459442, 1186042, 524168, 1538751, 336465, 1387849, 925502, 1309791, 1497144, 288703, 152779, 1232917, 329900, 565164, 589190, 1040801};


typedef struct {
	uint32_t coefficients[N];
} Mulan_Polynomial; //__attribute__((aligned(32)));

void Mulan_PolyVec_Power2Round(Mulan_Polynomial * t1, Mulan_Polynomial * t0, const Mulan_Polynomial * t);

void Mulan_Poly_add(Mulan_Polynomial *c, const Mulan_Polynomial *a, const Mulan_Polynomial *b);
void Mulan_Poly_sub(
		Mulan_Polynomial *c, 
		const Mulan_Polynomial *a, 
		const Mulan_Polynomial *b);
void Mulan_Poly_assignment(Mulan_Polynomial *b, const Mulan_Polynomial *a);
void Mulan_Poly_forward_ntt(Mulan_Polynomial *a);
void Mulan_Poly_invntt_frominvmont(Mulan_Polynomial *a);
void Mulan_Poly_pointwise_invmontgomery(Mulan_Polynomial *c, const Mulan_Polynomial *a, const Mulan_Polynomial *b);


uint32_t Mulan_PolyVec_make_hint(
		Mulan_Polynomial h[ROWS_K],
		const Mulan_Polynomial a[ROWS_K], 
		const Mulan_Polynomial b[ROWS_K]);
void Mulan_PolyVec_use_hint(
		Mulan_Polynomial dest[ROWS_K], 
		const Mulan_Polynomial h[ROWS_K], 
		const Mulan_Polynomial r[ROWS_K]);
		
void Mulan_PolyVec_decompose(
		Mulan_Polynomial * v1, 
		Mulan_Polynomial * v0, 
		const Mulan_Polynomial * v, 
		const uint32_t dim);

void Mulan_PolyVec_add(
		Mulan_Polynomial * c, 
		const Mulan_Polynomial * a, const Mulan_Polynomial * b);
		
void Mulan_PolyVec_freeze(Mulan_Polynomial * ptr, uint32_t dim);

void Mulan_PolyVec_forward_ntt(Mulan_Polynomial * p, const uint32_t dim);

void Mulan_Generate_A(
		Mulan_Polynomial matrix[ROWS_K][COLUMNS_ELL], 
		const unsigned char rho[SEEDBYTES]);
		
unsigned int Mulan_Rej_eta(
		uint32_t * ptr,
		unsigned int len,
		const unsigned char *buf,
		unsigned int buflen);
	
void Mulan_Poly_uniform_eta(
		Mulan_Polynomial * poly,
		const unsigned char * seed, 
		const unsigned char nonce);
		

void Mulan_poly_uniform_gamma1m1(
		Mulan_Polynomial * a,
		const unsigned char seed[SEEDBYTES + CRHBYTES],
		uint16_t nonce);
		
unsigned int Mulan_rej_gamma1m1(
		uint32_t * a,
		unsigned int len,
		const unsigned char *buf,
		unsigned int buflen);

void Mulan_pack_w1(
		unsigned char * p,
		const Mulan_Polynomial w1[DIM_w1]);

int Mulan_PolyVec_check_norm(
		const Mulan_Polynomial * p,
		const uint32_t dim,
		const uint32_t bound);
uint32_t Mulan_Poly_compare(const Mulan_Polynomial *a, const Mulan_Polynomial *b);

void Mulan_challenge(
		Mulan_Polynomial * c, 
		const unsigned char mu[CRHBYTES], 
		const Mulan_Polynomial w1[ROWS_K]);

#define Mulan_Poly_decompose(v1, v0, v) Mulan_PolyVec_decompose(v1, v0, v, 1)
#define Mulan_Poly_check_norm(p, bound) Mulan_PolyVec_check_norm(p, 1, bound)


uint32_t Mulan_montgomery_reduce(uint64_t a);

#endif